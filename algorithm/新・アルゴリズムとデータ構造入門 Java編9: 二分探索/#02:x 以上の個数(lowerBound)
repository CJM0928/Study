import java.util.Scanner;
import java.util.Arrays;

public class Main {

    // 이분 탐색(Lower Bound) 
    // a = [1, 3, 5, 7, 9], x = 5
    // lowerBound(a, x) → 인덱스 2 (a[2] == 5)
    // 이 말은: 인덱스 2부터 끝까지는 5 이상
    // 인덱스 0~1까지는 5 미만

    // 関数 lowerBound(a, n, x) を定義
    static int lowerBound(int[] a, int n, int x){
        // 変数 left, right をそれぞれ 0 と n で初期化
        int left = 0, right = n;
        
        // left と right が一致しない間        
        while(left != right){
            // 変数 mid に (left + right) / 2 を代入
            int mid = (left + right) / 2;
            
            // もし a[mid] が x 以上なら
            if(a[mid] >= x){
                
                // right を mid で更新
                right = mid;
                
            // そうでなければ
            } else {
                
                // left を mid + 1 で更新
                left = mid + 1;
            }
        }   
        
        // left を返す
        return left;
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();               // 3

        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();            // 8 1 3
        }

        // 配列 a を昇順にソート
        // 이분탐색은 정렬이 된 상태에서 시작함
        Arrays.sort(a);

        int q = sc.nextInt();               // 1

        int[] k = new int[q];
        for (int i = 0; i < q; i++) {
            k[i] = sc.nextInt();            // 3
            // n - lowerBound(a, n, k[i]) を出力
            System.out.println(n - lowerBound(a,n,k[i]));
        }
    }
}
