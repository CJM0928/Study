import java.util.Scanner;
import java.util.Arrays;

public class Main {


    // 整数 n, q と長さ n の配列 a, 長さ q の配列 l, r が与えられるので、
    // 各 l[i], r[i] について、この配列の l[i] 以下または r[i] 以上である要素の個数を出力してください。

    // 입력 값
    // 5
    // 5 4 3 2 1
    // 3  
    // 1 5
    // 2 4
    // 3 4

    // 출력 값
    // 2
    // 4
    // 5
    static int lowerBound(int[] a, int n, int x) {

        int left = 0, right = n;

        while (left != right) {
            int mid = (left + right) / 2;
            
            // 10 9 8 7 6 5 4 3
            if (a[mid] >= x) {
                right = mid;
            } else {
                left = mid + 1;
            }
        }

        return left;
    }
    
    // 関数 upperBound(a, n, y) を定義
    static int upperBound(int[] a, int n, int y){
        // 変数 left, right をそれぞれ 0 と n で初期化
        int left = 0, right = n;
        
        // left と right が一致しない間
        while(left != right){
            
            // 変数 mid に (left + right) / 2 を代入
            int mid = (left + right) / 2;

            // もし a[mid] が y より大きいなら
            // 10 9
            if (a[mid] > y) {
                
                // right を mid で更新
                right = mid;
                
            // そうでなければ
            } else {
                
                // left を mid + 1 で更新
                left = mid + 1;
            }
        }
        
        // left を返す
        return left;
    }


    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();

        int[] a = new int[n];
        for (int i = 0; i < n; i++) {
            a[i] = sc.nextInt();            // 10 9 8 7 6 5 4 3 2 1
        }

        // 配列 a を昇順にソート
        Arrays.sort(a);
        
        int q = sc.nextInt();

        int[] l = new int[q], r = new int[q];
        for (int i = 0; i < q; i++) {
            l[i] = sc.nextInt();            // 3
            r[i] = sc.nextInt();            // 8

            // upperBound(a, n, r[i]) - lowerBound(a, n, l[i]) を出力
            // 배열a에서 x 이상 y이하의 값을 출력하는 방법
            // 즉, 배열a에서 r[i] 이상 l[i] 이하 값을 출력하기기
            System.out.println(upperBound(a,n,r[i]));       // 8
            System.out.println(lowerBound(a,n,l[i]));       // 2
            System.out.println(upperBound(a,n,r[i]) - lowerBound(a,n,l[i]));
        }
    }
}
