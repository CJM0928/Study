import java.util.Scanner;

public class Main {


    // 입력 값
    // 5 5 1 1 3 3 7

    // 출력 값
    // 0 0 0 0 0
    // 0 7 7 7 0
    // 0 7 7 7 0
    // 0 7 7 7 0
    // 0 0 0 0 0
    static void print2DArray(int[][] a, int n, int m) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (j != 0) {
                    System.out.print(" ");
                }
                System.out.print(a[i][j]);
            }
            System.out.println();
        }
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n, m, x1, y1, x2, y2, x;
        n = sc.nextInt();       // 5
        m = sc.nextInt();       // 5
        x1 = sc.nextInt();      // 1
        y1 = sc.nextInt();      // 1
        x2 = sc.nextInt();      // 3
        y2 = sc.nextInt();      // 3
        x = sc.nextInt();       // 7 (더해줄 값)

        // 配列 a をサイズ (n+1)×(m+1) で用意
        int[][] a = new int[n+1][m+1];
        
        // a[x2+1][y2+1] に x, a[x2+1][y1] に -x, a[x1][y2+1] に -x, a[x1][y1] に x を加算
        a[x2+1][y2+1] += x;
        a[x2+1][y1] -= x;
        a[x1][y2+1] -= x;
        a[x1][y1] += x;

        // 이때 결과는 
        // 0 0 0 0 0
        // 0 7 0 0 -7
        // 0 0 0 0 0
        // 0 0 0 0 0  
        // 0 -7 0 0 7
        // 처럼 완성됨

        // i を 0 から n-1 まで繰り返す
        for(int i=0; i<n; i++){
            // j を 1 から m-1 まで繰り返す
            for(int j=1; j<m; j++){
                // a[i][j] に a[i][j-1] を加算
                a[i][j] += a[i][j-1]; 

                // 이때 가로는 →
                // a 배열 (행 누적합 완료):
                // 0 0 0 0 0 0  
                // 0 7 7 7 0 0  
                // 0 0 0 0 0 0  
                // 0 0 0 0 0 0  
                // 0 -7 -7 -7 0 0  
                // 0 0 0 0 0 0  
                // 으로 완성됨
            }
        }
        
        // j を 0 から m-1 まで繰り返す
        for(int j=0; j<m; j++){
            // i を 1 から n-1 まで繰り返す
            for(int i=1; i<n; i++){
                // a[i][j] に a[i-1][j] を加算
                a[i][j] += a[i-1][j];

                // 이때 세로는 ↓ 
                // a 배열 (열 누적합 완료):
                // 0  0  0  0  0  
                // 0  7  7  7  0  
                // 0  7  7  7  0  
                // 0  7  7  7  0  
                // 0  0  0  0  0  
                // 으로 완성됨
            }
        }
        // a を出力
        print2DArray(a,n,m);
    }
}
