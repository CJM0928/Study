import java.util.*;

// 数字からなる文字列 S が与えられるので、 S の先頭（左側）から S を見て行ったときにその数字が現れたのが 2 回目以降の場合、
// その数字を削除した文字列（重複した数字を削除した文字列）を求めてください。

// 例
// ・ S = "1234567890" のとき
// 数字に重複はないので "1234567890" が答えとなります。

// ・ S = "112123123412345" のとき
// "12345" が答えとなります。
// ・ 1 は 1 文字目に初めて現れるので、それ以降の 1 は読み飛ばします。
// ・ 2 は 3 文字目に初めて現れ、それ以降の 2 は読み飛ばします。
// ・ 3 は 6 文字目に初めて現れ、それ以降の 3 は読み飛ばします。
// ・ 4 は 10 文字目に初めて現れ、それ以降の 4 は読み飛ばします。
// ・ 5 は 15 文字目に初めて現れ、それ以降の 5 は読み飛ばします。

public class Main {
    public static void main(String[] args) {
        // 自分の得意な言語で
        // Let's チャレンジ！！
        Scanner sc = new Scanner(System.in);
        String line = sc.nextLine();
        
        Set<Character> seen = new HashSet<>();    // 중복을 제거해주는 특징이 존재, 단 순서는 보장안됨
        StringBuilder sb = new StringBuilder();   // 순서를 보장해주기 위해 StringBuilder를 이용해서 출력
        
        for(int i=0; i<line.length(); i++){
            char ch = line.charAt(i);
            if(!seen.contains(ch)){                // 중복을 제거해주는 로직
                seen.add(ch);
                sb.append(ch);
            }
        }
        System.out.println(sb.toString());

    }
}
